quarkus.http.root-path=api
# datasource configuration
quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=${DATASOURCE_USERNAME}
#quarkus.datasource.password=${DATASOURCE_PASSWORD}
#quarkus.datasource.jdbc.url=jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT:5432}/${DATASOURCE_DB}
#quarkus.datasource.reactive.url=postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT:5432}/${DATASOURCE_DB}
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation=update
# Http configuration
quarkus.http.cors=true
#quarkus.http.cors.origins=http://foo.com,http://www.bar.io,/https://([a-z0-9\\-_]+)\\.app\\.mydomain\\.com/
quarkus.http.cors.origins=${QUARKUS_HTTP_CORS_ORIGINS}
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=X-Custom, Sec-*, User-Agent, Content-Type, Authorization, X-Jwt-Token
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true
quarkus.smallrye-openapi.path=/q/openapi
# OIDC Configuration
quarkus.oidc.auth-server-url=${QUARKUS_OIDC_AUTH_SERVER_URL}
quarkus.oidc.client-id=${QUARKUS_OIDC_CLIENT_ID}
quarkus.oidc.credentials.secret=${QUARKUS_OIDC_CLIENT_SECRET}
quarkus.oidc.tls.verification=none
#Fix bug Bug Requires uma_protection scope
quarkus.oidc.roles.role-claim-path=resource_access/${QUARKUS_OIDC_CLIENT_ID}/roles
# Enable Policy Enforcement
quarkus.keycloak.policy-enforcer.enable=true
# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes
# quarkus.keycloak.devservices.realm-path=quarkus-realm.json
# Your configuration properties
# Disable http2 for all REST Clients by default
quarkus.rest-client.http2=true
quarkus.rest-client.extensions-api.http2=true
quarkus.rest-client.formio-api.url=${QUARKUS_REST_CLIENT_URL_FORMIO}
quarkus.rest-client.formio-api.scope=jakarta.inject.Singleton
quarkus.rest-client.formio-api.verify-host=false
quarkus.rest-client.formio-api.http2=true
formio.jwt-secret=${FORMIO_JWT_SECRET}
quarkus.rest-client.formsflow-api.url=${QUARKUS_REST_CLIENT_URL_FORMSFLOW}
quarkus.rest-client.formsflow-api.scope=jakarta.inject.Singleton
quarkus.rest-client.formsflow-api.verify-host=false
quarkus.rest-client.formsflow-api.http2=true
mp.jwt.verify.publickey.algorithm=HS256
#smallrye.jwt.new-token.signature-algorithm=HS256
%dev.quarkus.http.cors.origins=/.*/
%dev.quarkus.http.port=8081